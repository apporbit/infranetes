syntax = "proto3";

package common;

service Metrics {
    rpc GetMetrics(GetMetricsRequest) returns (GetMetricsResponse) {}
}

service VMServer {
    //rpc UploadFiles(File) returns (UploadResponse) {}
    rpc StartProxy(StartProxyRequest) returns (StartProxyResponse) {}
    rpc RunCmd(RunCmdRequest) returns (RunCmdResponse) {}
    rpc SetPodIP(SetIPRequest) returns (SetIPResponse) {}
    rpc GetPodIP(GetIPRequest) returns (GetIPResponse) {}
    rpc SetSandboxConfig(SetSandboxConfigRequest) returns (SetSandboxConfigResponse) {}
    rpc GetSandboxConfig(GetSandboxConfigRequest) returns (GetSandboxConfigResponse) {}
    rpc CopyFile(CopyFileRequest) returns (CopyFileResponse) {}
    rpc MountFs(MountFsRequest) returns (MountFsResponse) {}
    rpc SetHostname(SetHostnameRequest) returns (SetHostnameResponse) {}
    rpc Logs(LogsRequest) returns (stream LogLine) {}
    rpc GetMetrics(GetMetricsRequest) returns (GetMetricsResponse) {}
}

message GetMetricsRequest {
    int32 count = 1;
}

message GetMetricsResponse {
   repeated bytes jsonMetricResponses = 1;
}

message LogsRequest {
    string containerID = 1;
}

message LogLine {
    string logLine = 1;
}

message File {
    int64 size = 1;
    bytes data = 2;
}

message UploadResponse {}

message StartProxyRequest {
    string ip = 1;
    string clusterCidr = 2;
    bytes kubeconfig = 3;
}

message StartProxyResponse {}

message RunCmdRequest {
    string cmd = 1;
    repeated string args = 2;
}

message RunCmdResponse{}

message SetIPRequest {
    string ip = 1;
}

message SetIPResponse{}

message GetIPRequest{}

message GetIPResponse{
    string ip = 1;
}

message SetSandboxConfigRequest {
    bytes config = 1;
}

message SetSandboxConfigResponse{}

message GetSandboxConfigRequest{}

message GetSandboxConfigResponse{
    bytes config = 1;
}

message CopyFileRequest{
    string file = 1;
    bytes fileData = 2;
}

message CopyFileResponse{}

message MountFsRequest {
    string source = 1;
    string target = 2;
    string fstype = 3;
    bool readOnly = 4;
}

message MountFsResponse{}

message SetHostnameRequest {
    string hostname = 1;
}

message SetHostnameResponse{}